Samples EQU 315	

Timeout EQU 0C1H	;
LFP EQU P3.3
HFP EQU P3.4

ORG 0000H
LJMP MAIN;

;ORG 0003H;
;LJMP ISR_EXT0
;
ORG 000BH;
MOV P0,BUFFER1; 
MOV P1,BUFFER2;
MOV P2,A;
;MOV P2,BUFFER3;
SETB FLAG1;
RETI    



;LJMP ISR_TIMER;
;
;ORG 0013H;
;LJMP ISR_EXT1

;ORG 0023H;
;LJMP ISR_SERIAL;

ORG 0500H

DB 07FH
DB 082H
DB 084H
DB 087H
DB 089H
DB 08CH
DB 08EH
DB 091H
DB 093H
DB 096H
DB 098H
DB 09BH
DB 09DH
DB 0A0H
DB 0A2H
DB 0A4H
DB 0A7H
DB 0A9H
DB 0ACH
DB 0AEH
DB 0B0H
DB 0B3H
DB 0B5H
DB 0B7H
DB 0BAH
DB 0BCH
DB 0BEH
DB 0C0H
DB 0C2H
DB 0C4H
DB 0C7H
DB 0C9H
DB 0CBH
DB 0CDH
DB 0CFH
DB 0D1H
DB 0D3H
DB 0D4H
DB 0D6H
DB 0D8H
DB 0DAH
DB 0DCH
DB 0DDH
DB 0DFH
DB 0E1H
DB 0E2H
DB 0E4H
DB 0E5H
DB 0E7H
DB 0E8H
DB 0EAH
DB 0EBH
DB 0ECH
DB 0EEH
DB 0EFH
DB 0F0H
DB 0F1H
DB 0F2H
DB 0F3H
DB 0F4H
DB 0F5H
DB 0F6H
DB 0F7H
DB 0F8H
DB 0F9H
DB 0F9H
DB 0FAH
DB 0FBH
DB 0FBH
DB 0FCH
DB 0FCH
DB 0FCH
DB 0FDH
DB 0FDH
DB 0FDH
DB 0FEH
DB 0FEH
DB 0FEH
DB 0FEH
DB 0FEH
DB 0FEH
DB 0FEH
DB 0FEH
DB 0FEH
DB 0FDH
DB 0FDH
DB 0FDH
DB 0FCH
DB 0FCH
DB 0FBH
DB 0FBH
DB 0FAH
DB 0FAH
DB 0F9H
DB 0F8H
DB 0F7H
DB 0F7H
DB 0F6H
DB 0F5H
DB 0F4H
DB 0F3H
DB 0F2H
DB 0F1H
DB 0EFH
DB 0EEH
DB 0EDH
DB 0ECH
DB 0EAH
DB 0E9H
DB 0E8H
DB 0E6H
DB 0E5H
DB 0E3H
DB 0E1H
DB 0E0H
DB 0DEH
DB 0DDH
DB 0DBH
DB 0D9H
DB 0D7H
DB 0D5H
DB 0D4H
DB 0D2H
DB 0D0H
DB 0CEH
DB 0CCH
DB 0CAH
DB 0C8H
DB 0C5H
DB 0C3H
DB 0C1H
DB 0BFH
DB 0BDH
DB 0BBH
DB 0B8H
DB 0B6H
DB 0B4H
DB 0B1H
DB 0AFH
DB 0ADH
DB 0AAH
DB 0A8H
DB 0A6H
DB 0A3H
DB 0A1H
DB 09EH
DB 09CH
DB 099H
DB 097H
DB 094H
DB 092H
DB 08FH
DB 08DH
DB 08AH
DB 088H
DB 085H
DB 083H
DB 080H
DB 07EH
DB 07BH
DB 079H
DB 076H
DB 074H
DB 071H
DB 06FH
DB 06CH
DB 06AH
DB 067H
DB 065H
DB 062H
DB 060H
DB 05DH
DB 05BH
DB 058H
DB 056H
DB 054H
DB 051H
DB 04FH
DB 04DH
DB 04AH
DB 048H
DB 046H
DB 043H
DB 041H
DB 03FH
DB 03DH
DB 03BH
DB 039H
DB 036H
DB 034H
DB 032H
DB 030H
DB 02EH
DB 02CH
DB 02AH
DB 029H
DB 027H
DB 025H
DB 023H
DB 021H
DB 020H
DB 01EH
DB 01DH
DB 01BH
DB 019H
DB 018H
DB 016H
DB 015H
DB 014H
DB 012H
DB 011H
DB 010H
DB 0FH
DB 0DH
DB 0CH
DB 0BH
DB 0AH
DB 09H
DB 08H
DB 07H
DB 07H
DB 06H
DB 05H
DB 04H
DB 04H
DB 03H
DB 03H
DB 02H
DB 02H
DB 01H
DB 01H
DB 01H
DB 00H
DB 00H
DB 00H
DB 00H
DB 00H
DB 00H
DB 00H
DB 00H
DB 00H
DB 01H
DB 01H
DB 01H
DB 02H
DB 02H
DB 02H
DB 03H
DB 03H
DB 04H
DB 05H
DB 05H
DB 06H
DB 07H
DB 08H
DB 09H


ORG 0700H

;DB 09H
DB 0AH
DB 0BH
DB 0CH
DB 0DH
DB 0EH
DB 0FH
DB 010H
DB 012H
DB 013H
DB 014H
DB 016H
DB 017H
DB 019H
DB 01AH
DB 01CH
DB 01DH
DB 01FH
DB 021H
DB 022H
DB 024H
DB 026H
DB 028H
DB 02AH
DB 02BH
DB 02DH
DB 02FH
DB 031H
DB 033H
DB 035H
DB 037H
DB 03AH
DB 03CH
DB 03EH
DB 040H
DB 042H
DB 044H
DB 047H
DB 049H
DB 04BH
DB 04EH
DB 050H
DB 052H
DB 055H
DB 057H
DB 05AH
DB 05CH
DB 05EH
DB 061H
DB 063H
DB 066H
DB 068H
DB 06BH
DB 06DH
DB 070H
DB 072H
DB 075H
DB 077H
DB 07AH
DB 07CH


MAIN:

;INIT

	FLAG1 BIT 00H;
	CASE_1 BIT 01H;
	CASE_2 BIT 02H;
	CASE_3 BIT 03H;
	PROCESS_FL BIT 04H;
	FL1 BIT 05H;
	FL2 BIT 06H;
	FL3 BIT 07H;

	CLR CASE_1;
	CLR CASE_2;
	CLR CASE_3;
	CLR PROCESS_FL;
	CLR FL1;
	CLR FL2;
	CLR FL3;
			
	BUFFER1 DATA 30H;
	BUFFER2 DATA 31H;
	BUFFER3 DATA 32H; 

	MOV P0,#0FFH;
	MOV P1,#0FFH;
	MOV P2,#0FFH;
	
	MOV 	IE, 	#10000010B;
	MOV 	TMOD ,	#00100010B; 		
		
	MOV 	TH0,#Timeout;		loading the reload values into timer0
	MOV 	TL0,#Timeout;
	MOV DPTR,#0500H;
	
	MOV R2,#(SAMPLES)/3;
	
	MOV R3,#00;
	MOV A,R3;
	MOVC A,@A+DPTR;
	MOV BUFFER1,A;

	MOV R4,#104;
	MOV A,R4;
	MOVC A,@A+DPTR;
	MOV BUFFER2,A;

	MOV R5,#209;
	MOV A,R5;
	MOVC A,@A+DPTR;
	MOV BUFFER3,A;
			
;MAIN LOOP
;	FLAG1 BIT 00H;
	
	MOV P0,BUFFER1;
	MOV P1,BUFFER2;
	MOV P2,BUFFER3;

	SETB CASE_1;
	
	
	SETB LFP;
	SETB HFP;
	SETB FLAG1;
	SETB TR0;
	
START1:		JNB FLAG1,$;
		CLR FLAG1;
		DJNZ R2,CONTINUE;
		
		MOV R2,#((SAMPLES)/3);

		JB CASE_1,PROCESS_1;
		JB CASE_2,PROCESS_2;
		JB CASE_3,PROCESS_3;
		PROCESS_1:SETB PROCESS_FL;
			  CLR FL3;
			  INC R3;
			  INC R4;
			  MOV R5,#00;
			  CLR CASE_1;
			  SETB CASE_2;
			  JMP CONTINUE;
		PROCESS_2:SETB PROCESS_FL;
			  CLR FL2;
			  INC R3;
			  MOV R4,#00H;
			  INC R5;
			  CLR CASE_2;
			  SETB CASE_3;
			  JMP CONTINUE;
		PROCESS_3:SETB PROCESS_FL;
			  CLR FL1;
			  MOV R3,#00H;
			  INC R4;
			  INC R5;
			  CLR CASE_3;
			  SETB CASE_1;
		
			CONTINUE:	JB PROCESS_FL,TARGET_CONTINUE;
					MOV A,#1;
					ADD A,R3;
					MOV R3,A;
					JNB FL1,CHK_CARRY_1;
				INT_1:	;CLR C;
					MOV DPTR,#0700H;
					MOVC A,@A+DPTR;
	 				MOV BUFFER1,A;
	 				SETB FL1;
	 				MOV DPTR,#0500H;
	 				JMP CONTINUE_2;
			  CHK_CARRY_1:	JC INT_1;
					;MOV DPTR,#0500H;
					MOVC A,@A+DPTR;
	 				MOV BUFFER1,A;

	 		CONTINUE_2:     ;JB PROCESS_FL,TARGET_CONTINUE;
					MOV A,#1;
					ADD A,R4;
					MOV R4,A;
					JNB FL2,CHK_CARRY_2;
				INT_2:	;CLR C;
					MOV DPTR,#0700H;
					MOVC A,@A+DPTR;
	 				MOV BUFFER2,A;
	 				SETB FL2;
	 				MOV DPTR,#0500H; 
	 				JMP CONTINUE_3; 
			  CHK_CARRY_2:	JC INT_2;
					;MOV DPTR,#0500H;
					MOVC A,@A+DPTR;
	 				MOV BUFFER2,A;

	 		CONTINUE_3:	;JB PROCESS_FL,TARGET_CONTINUE;
					MOV A,#1;
					ADD A,R5;
					MOV R5,A;
					JNB FL3,CHK_CARRY_3;
				INT_3:	;CLR C;
					MOV DPTR,#0700H;
					MOVC A,@A+DPTR;
	 				MOV BUFFER3,A;
	 				SETB FL3;
	 				MOV DPTR,#0500H;
	 				LJMP START1;
			  CHK_CARRY_3:	JC INT_3;
					;MOV DPTR,#0500H;
					MOVC A,@A+DPTR;
	 				MOV BUFFER3,A;

	 				LJMP START1;
					
					
	 		TARGET_CONTINUE:CLR PROCESS_FL;
	 				MOV A,R3;
	 				MOVC A,@A+DPTR;
	 				MOV BUFFER1,A;

	 				MOV A,R4;
	 				MOVC A,@A+DPTR;
	 				MOV BUFFER2,A;

	 				 MOV A,R5;
	 				 MOVC A,@A+DPTR;
	 			         MOV BUFFER3,A;
	
					LJMP START1;

;START2:	JNB FLAG2,$;
;	CLR FLAG2;
;	DJNZ R3,START2;
;	SETB FLAG1;
;	MOV A,R4;
;	MOVC A,@A+DPTR;
;	INC R4;
;	MOV R3,#2;
;	DJNZ R2,START2;
;	MOV R4,#00H;
;	SETB FLAG3;
;	MOV R2,#Samples;
;	JMP START1

		
;	CLR RI;
;	MOV A, SBUF
;    	RL A;
;    	RL A;
;	ORL A,#03H;
;	MOV P3,A;
;	MOV SBUF,P3;
;	JNB TI,$;
;	CLR TI;


;ISR_TIMER:
;	RETI;
;ISR_EXT0:
;	RETI;
;ISR_EXT1:
;	RETI;
END






